"""add lookbacks table

Revision ID: 6a838b4f6689
Revises: a19396539678
Create Date: 2024-12-31 07:43:33.433084

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6a838b4f6689'
down_revision: Union[str, None] = 'a19396539678'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('twitter_id_unique', 'users', ['twitter_id'])
    op.create_table('lookbacks',
    sa.Column('id', sa.BIGINT(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('twitter_id', sa.String(length=255), nullable=False, comment='Twitter ID'),
    sa.Column('lookback_msg', sa.String(length=255), nullable=False, comment='Lookback Message'),
    sa.ForeignKeyConstraint(['twitter_id'], ['users.twitter_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('twitter_id', name='user_unique')
    )
    op.create_index(op.f('ix_lookbacks_user_id'), 'lookbacks', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('twitter_id_unique', 'users', type_='unique')
    op.create_table('celery_taskmeta',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('task_id', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('result', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('date_done', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('traceback', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('args', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('kwargs', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('worker', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('retries', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('queue', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='celery_taskmeta_pkey'),
    sa.UniqueConstraint('task_id', name='celery_taskmeta_task_id_key')
    )
    op.create_table('celery_tasksetmeta',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('taskset_id', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('result', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('date_done', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='celery_tasksetmeta_pkey'),
    sa.UniqueConstraint('taskset_id', name='celery_tasksetmeta_taskset_id_key')
    )
    op.create_table('kombu_message',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('visible', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('payload', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('version', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('queue_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['queue_id'], ['kombu_queue.id'], name='FK_kombu_message_queue'),
    sa.PrimaryKeyConstraint('id', name='kombu_message_pkey')
    )
    op.create_index('ix_kombu_message_visible', 'kombu_message', ['visible'], unique=False)
    op.create_index('ix_kombu_message_timestamp_id', 'kombu_message', ['timestamp', 'id'], unique=False)
    op.create_index('ix_kombu_message_timestamp', 'kombu_message', ['timestamp'], unique=False)
    op.create_table('kombu_queue',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='kombu_queue_pkey'),
    sa.UniqueConstraint('name', name='kombu_queue_name_key')
    )
    op.drop_index(op.f('ix_lookbacks_user_id'), table_name='lookbacks')
    op.drop_table('lookbacks')
    # ### end Alembic commands ###
